#!/bin/bash

# Get some nice aliases for the colors
. ~/.bash_colors

# Let's make a nice prompt
set_prompt () {
    Last_Command=$? # Must come first!
    FancyX='\342\234\227'
    Checkmark='\342\234\223'

	if [ $(id -u) -eq 0 ]; then
		userColor=$BIRed
	else
		userColor=$BIGreen
	fi

	# Update the title bar
	PS1="\[\033]0;\u@\h: \w\007\]"
	# Print the date and user
	PS1+="[\[$BIYellow\]\D{%a, %F %I:%M:%S}\[$Reset\] - \[$userColor\]\u@\h\[$Reset\]]"
	# Get git status with dirty state (* for unstaged, + for staged) and
	# untracked files (%)
	GIT_PS1_SHOWDIRTYSTATE="true"
	GIT_PS1_SHOWUNTRACKEDFILES="true"
	PS1+=" \$(__git_ps1 \"(\[$BIPurple\]%s\\[$Reset\])\")\n"

	# Add a bright white exit status for the last command
    PS1+="\[$White\]\$? "
    # If it was successful, print a green check mark. Otherwise, print
    # a red X.
    if [[ $Last_Command == 0 ]]; then
        PS1+="\[$Green\]$Checkmark "
    else
        PS1+="\[$Red\]$FancyX "
    fi
    # Print the working directory and prompt marker in blue, and reset
    # the text color to the default.
    PS1+="\[$BIBlue\]\w \$\[$Reset\] "

}

PROMPT_COMMAND='set_prompt'
